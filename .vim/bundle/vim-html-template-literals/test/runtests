#!/usr/bin/env bash

cd "$(dirname "$0")" || exit 1

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NORMAL='\033[0m'

generateTypeScriptTests() {
  rm -r ./ts
  for javascriptTest in js/indent/*.vader; do
    typescriptTest=$(echo "$javascriptTest" | sed -E 's#^js/#ts/#' | sed -E 's/.vader$/-typescript.vader/')

    mkdir -p "$(dirname "$typescriptTest")"

    cat > "$typescriptTest" <<- END_HEADER
			=================================
			== THIS FILE IS AUTO-GENERATED ==
			=================================
		END_HEADER

    escaped_syntax_plugin=$(echo "$SYNTAX_PLUGIN" | sed 's#/#\\/#')

    cat < "$javascriptTest" \
      | sed -E 's/Given javascript/Given typescript/' \
      | sed -E 's/Expect javascript/Expect typescript/' \
      | sed "/@ignore-ts-test-for-plugin=$escaped_syntax_plugin/,/@end-ignore-ts/d" \
      >> "$typescriptTest"

    skipCount=$(cat < "$javascriptTest" | grep -c "@ignore-ts-test-for-plugin=$escaped_syntax_plugin")
    if [[ "$skipCount" -ne 0 ]]; then
      echo -e "(${YELLOW}skipping $skipCount tests${NORMAL})"
    fi
  done
}

for TEST_CONFIG in 'js,pangloss/vim-javascript' 'ts,leafgarland/typescript-vim' 'ts,none'; do
  TEST_CONFIG_ARRAY=(${TEST_CONFIG//,/ })
  TEST_DIR=${TEST_CONFIG_ARRAY[0]}
  SYNTAX_PLUGIN=${TEST_CONFIG_ARRAY[1]}

  echo
  echo "running $TEST_DIR tests with syntax plugin \"$SYNTAX_PLUGIN\""

  export SYNTAX_PLUGIN

  if [[ $TEST_DIR = "ts" ]]; then
    generateTypeScriptTests
  fi

  output=$(vim -u <(cat minimalvimrc) +'Vader! '"$TEST_DIR"'/**/*.vader' 2>&1)
  exit_code=$?
  if [[ $exit_code != 0 ]]; then
    echo tests failed
    if [[ "$CI" != true ]]; then
      echo -e " ${RED}✗ tests failed${NORMAL}"
      echo showing failed tests in vim 
      vim -u <(cat minimalvimrc) +'Vader '"$TEST_DIR"'/**/*.vader'
    else
      echo "$output"
    fi
    exit 1
  else
    echo -e " ${GREEN}✓ tests passed${NORMAL}"
  fi
done
